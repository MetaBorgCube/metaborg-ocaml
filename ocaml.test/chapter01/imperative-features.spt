module record-and-variant-disambiguation

language ocaml

start symbol Definition 

test test [[ 
  let add_vect v1 v2 =
   let len = min (Array.length v1) (Array.length v2) in
   let res = Array.make len 0.0 in
   for i = 0 to len - 1 do
     res.(i) <- v1.(i) +. v2.(i) 
   done;
   res
]] parse succeeds

test test [[
  let x = add_vect [| 1.0; 2.0 |] [| 3.0; 4.0 |]
]] parse succeeds

test test [[
   type mutable_point = { mutable x: float; mutable y: float }
]] parse succeeds

test test [[
  let translate p dx dy =
   p.x <- p.x +. dx; p.y <- p.y +. dy
]] parse succeeds

test test [[
   let mypoint = { x = 0.0; y = 0.0 }
]] parse succeeds

test test [[
   let x = translate mypoint 1.0 2.0
]] parse succeeds

test test [[
   let insertion_sort a =
   for i = 1 to Array.length a - 1 do
     let val_i = a.(i) in
     let j = ref i in
     while !j > 0 && val_i < a.(!j - 1) do
       a.(!j) <- a.(!j - 1);
       j := !j - 1
     done;
     a.(!j) <- val_i
   done
]] parse succeeds

test test [[
   let random () =
   current_rand := !current_rand * 25713 + 1345;
   !current_rand
]] parse succeeds

test test [[
   let x = 
   r.id <- (fun x -> print_string "called id\n"; x)
]] parse succeeds

test test [[
   let x = 
   r.id <- (fun x -> print_string "called id\n"; x)
]] parse succeeds


