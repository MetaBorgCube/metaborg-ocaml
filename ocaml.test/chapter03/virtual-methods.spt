module virtual-methods

language ocaml

start symbol CompilationUnit 
  
test test [[ 
   class virtual abstract_point x_init =
   object (self)
     method virtual get_x : int
     method get_offset = self#get_x - x_init
     method virtual move : int -> unit
   end;;
]] parse succeeds 
  
test test [[ 
  class point x_init =
   object
     inherit abstract_point x_init
     val mutable x = x_init
     method get_x = x
     method move d = x <- x + d
   end;;
]] parse succeeds  
  
test test [[ 
  class virtual abstract_point2 =
   object
     val mutable virtual x : int
     method move d = x <- x + d
   end;;
]] parse succeeds 
  
test test [[ 
   class point2 x_init =
   object
     inherit abstract_point2
     val mutable x = x_init
     method get_offset = x - x_init
   end;;
]] parse succeeds


 

