module initializers

language ocaml

start symbol CompilationUnit 
  
test test [[ 
   class printable_point x_init =
   let origin = (x_init / 10) * 10 in
   object (self)
     val mutable x = origin
     method get_x = x
     method move d = x <- x + d
     method print = print_int self#get_x
     initializer print_string "new point at "; self#print; print_newline ()
   end;;
]] parse succeeds 
 
test test [[ 
  let p = new printable_point 17;;
]] parse succeeds 
 
test test [[ 
  let p = new printable_point 17;;
]] parse succeeds 



